{"version":3,"sources":["assets/remove.svg","assets/add.svg","components/Card/Card.jsx","components/Button/Button.jsx","components/AddForm/AddForm.jsx","components/Panel/Panel.jsx","actions/panels.js","actions/cards.js","containers/Panels.jsx","App.js","redux/reducers/panelsReducer.js","redux/store.js","index.js"],"names":["module","exports","Card","children","className","Button","onClick","AddForm","isEmptyPanel","onAddPanel","onAddCard","panelIndex","useState","showForm","setShowForm","value","setValue","textareaRef","useRef","openForm","useCallback","closeForm","useEffect","current","focus","placeholder","onChange","e","target","ref","rows","index","onAdd","src","clearSvg","alt","addSvg","Panel","cards","title","addPanel","addCard","deletePanel","classNames","window","confirm","removeSvg","map","card","key","panelActions","name","type","payload","cardsActions","text","Panels","dispatch","useDispatch","items","useSelector","panels","item","App","InitialState","panelsReducer","state","action","filter","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c094be39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/remove.b36a3633.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.78cc8215.svg\";","import * as React from 'react';\r\nimport './Card.scss'\r\n\r\n\r\nconst Card = ({children}) => {\r\n    return (\r\n        <div className='card'>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card","import * as React from 'react';\r\nimport './Button.scss'\r\n\r\nconst Button = ({children,onClick}) => {\r\n    return (\r\n        <button onClick={onClick} className='button'>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button","import {Fragment, useCallback, useEffect, useRef, useState} from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport Button from \"../Button/Button\";\r\nimport clearSvg from \"../../assets/remove.svg\";\r\nimport addSvg from \"../../assets/add.svg\";\r\nimport * as React from \"react\";\r\nimport './AddForm.scss'\r\n\r\nconst AddForm = ({isEmptyPanel,onAddPanel,onAddCard,panelIndex}) => {\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [value,setValue] = useState('');\r\n    const textareaRef = useRef(null);\r\n\r\n    const openForm = useCallback(() => {\r\n        setShowForm(true)\r\n    },[]);\r\n\r\n    const closeForm = useCallback(()=> {\r\n        setShowForm(false)\r\n    },[]);\r\n\r\n    const onAdd = (index,value) => {\r\n        if(!isEmptyPanel) {\r\n            onAddPanel(value)\r\n        } else {\r\n            onAddCard(index,value)\r\n        }\r\n        setValue('');\r\n        setShowForm(false)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(textareaRef.current) {\r\n            textareaRef.current.focus()\r\n        }\r\n    },[showForm]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {showForm\r\n                ? <div className='add-form'>\r\n                    <div className=\"add-form__input\">\r\n                        <Card>\r\n                            <textarea placeholder={!isEmptyPanel ? 'Введите название колонки' : 'Введите название карточки'}\r\n                                      onChange={e => setValue(e.target.value)}\r\n                                      value={value}\r\n                                      ref={textareaRef}\r\n                                      rows=\"3\"/>\r\n                        </Card>\r\n                        <div className=\"add-form__bottom\">\r\n                            <Button onClick={() => onAdd(panelIndex,value)}>\r\n                                {!isEmptyPanel ? 'Добавить колонку' : 'Добавить карточку'}\r\n                            </Button>\r\n                            <img onClick={closeForm} className='add-form__bottom-clear' src={clearSvg} alt=\"Clear svg icon\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <div className='panel__bottom'>\r\n                    <div className='panel__bottom-add-btn'>\r\n                        <img onClick={openForm} src={addSvg} alt=\"Add svg icon\"/>\r\n                        <span>{!isEmptyPanel ? 'Добавить еще одну колонку' : 'Добавить еще одну карточку'}</span>\r\n                    </div>\r\n                </div>}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default AddForm","import * as React from 'react';\r\nimport './Panel.scss'\r\nimport Card from \"../Card/Card\";\r\nimport AddForm from \"../AddForm/AddForm\";\r\nimport classNames from 'classnames'\r\nimport removeSvg from '../../assets/remove.svg'\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n\r\nconst Panel = ({cards,title,addPanel,addCard,panelIndex,deletePanel}) => {\r\n\r\n    const onDeletePanel = () => {\r\n        if(window.confirm('Вы действительно хотите удалить панель?')) {\r\n            deletePanel(panelIndex)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classNames('panel',{\r\n            'panel--empty': !cards\r\n        })}>\r\n            {cards &&\r\n            <div className='panel__remove'>\r\n                <img onClick={onDeletePanel} src={removeSvg} alt=\"remove svg\"/>\r\n            </div> }\r\n            {title\r\n            && <div className=\"panel__title\">\r\n                <b>{title}</b>\r\n            </div>\r\n            }\r\n            {cards && (\r\n                <div className='panel__items'>\r\n                {cards && cards.map((card, index) => <Card key={index}>{card}</Card>)}\r\n            </div>)}\r\n            <AddForm isEmptyPanel={cards} panelIndex={panelIndex} onAddPanel={addPanel} onAddCard={addCard}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Panel","// export default {\r\n//     addPanel: name => ({\r\n//         type:'PANELS:ADD',\r\n//         payload:name\r\n//     })\r\n// }\r\n\r\nexport const panelActions = {\r\n    addPanel: (name) => ({type:'PANELS:ADD',payload:name}),\r\n    deletePanel:(index) => ({type:'PANELS:DELETE',payload:index})\r\n};","export const cardsActions = {\r\n    addCard:(index,text) => ({type:'CARDS:ADD',payload:{text,index}})\r\n};","import * as React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Panel from \"../components/Panel/Panel\";\r\nimport {Fragment} from \"react\";\r\nimport {panelActions} from \"../actions/panels\";\r\nimport {cardsActions} from \"../actions/cards\";\r\n\r\n\r\nconst Panels = () => {\r\n    const dispatch = useDispatch();\r\n    const {items} = useSelector(({panels}) => panels);\r\n\r\n    const addPanel = (name) => {\r\n        debugger\r\n        dispatch(panelActions.addPanel(name))\r\n    };\r\n\r\n    const addCard = (index,text) => {\r\n        dispatch(cardsActions.addCard(index,text))\r\n    };\r\n\r\n    const deletePanel = (index) => {\r\n        dispatch(panelActions.deletePanel(index))\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {items && items.map((item,index) => <Panel panelIndex={index} deletePanel={deletePanel}  addPanel={addPanel} addCard={addCard} {...item} key={index}/>)}\r\n            <Panel addPanel={addPanel} addCard={addCard}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Panels","import React from 'react';\r\nimport './App.css';\r\nimport Panels from \"./containers/Panels\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n       <Panels/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const InitialState = {\r\n    items: [\r\n        {title: 'План на месяц', cards: [\r\n                'Пройти курс по React',\r\n                'Пройти курс по React',\r\n                'Пройти курс по React',\r\n            ]\r\n        },\r\n        {title: 'План на месяц', cards: [\r\n                'Пройти курс по React',\r\n                'Пройти курс по React',\r\n                'Пройти курс по React',\r\n            ]\r\n        },\r\n    ]\r\n};\r\n\r\nconst panelsReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case 'PANELS:ADD':\r\n            return {\r\n                ...state,\r\n                items: [...state.items,{\r\n                    title:action.payload,\r\n                    cards: []\r\n                }]\r\n            };\r\n        case 'CARDS:ADD':\r\n            return {\r\n                ...state,\r\n                items: state.items.map((item,index) => {\r\n                    if (index === action.payload.index) {\r\n                        return {\r\n                            ...item,\r\n                            cards: [...item.cards, action.payload.text]\r\n                        };\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n            };\r\n        case 'PANELS:DELETE':\r\n            return {\r\n                ...state,\r\n                items: state.items.filter((item,index) => action.payload !== index)\r\n            }\r\n\r\n    }\r\n    return state\r\n};\r\n\r\nexport default panelsReducer","import {combineReducers, createStore} from \"redux\";\r\nimport panelsReducer from \"./reducers/panelsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    panels:panelsReducer\r\n});\r\n\r\nconst store = createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <React.StrictMode>\r\n            <App/>\r\n        </React.StrictMode>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}